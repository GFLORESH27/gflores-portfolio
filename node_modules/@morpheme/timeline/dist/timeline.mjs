import { openBlock as s, createElementBlock as i, defineComponent as r, normalizeClass as _, renderSlot as n, createVNode as d, normalizeStyle as p, unref as a } from "vue";
import { getColor as m } from "@morpheme/utils";
const u = (t, e) => {
  const o = t.__vccOpts || t;
  for (const [l, c] of e)
    o[l] = c;
  return o;
}, f = {}, h = { class: "v-timeline-divider" };
function v(t, e) {
  return s(), i("li", h);
}
const $ = /* @__PURE__ */ u(f, [["render", v]]), z = /* @__PURE__ */ r({
  __name: "VTimeline",
  props: {
    dashed: { type: Boolean },
    horizontal: { type: Boolean }
  },
  setup(t) {
    return (e, o) => (s(), i("ol", {
      class: _(["v-timeline", {
        "v-timeline--dashed": e.dashed,
        "v-timeline--horizontal": e.horizontal
      }])
    }, [
      n(e.$slots, "divider", {}, () => [
        d($)
      ]),
      n(e.$slots, "default")
    ], 2));
  }
}), C = { class: "v-timeline-item" }, g = /* @__PURE__ */ r({
  __name: "VTimelineItem",
  setup(t) {
    return (e, o) => (s(), i("li", C, [
      n(e.$slots, "default")
    ]));
  }
}), V = { class: "v-timeline-item-content" }, k = /* @__PURE__ */ r({
  __name: "VTimelineItemContent",
  setup(t) {
    return (e, o) => (s(), i("li", V, [
      n(e.$slots, "default")
    ]));
  }
}), B = /* @__PURE__ */ r({
  __name: "VTimelineItemDot",
  props: {
    color: {},
    textColor: {}
  },
  setup(t) {
    const e = t, o = m(e.color), l = m(e.textColor);
    return (c, T) => (s(), i("li", {
      class: "v-timeline-item-dot",
      style: p({ backgroundColor: a(o), color: a(l) })
    }, [
      n(c.$slots, "default")
    ], 4));
  }
});
export {
  z as VTimeline,
  $ as VTimelineDivider,
  g as VTimelineItem,
  k as VTimelineItemContent,
  B as VTimelineItemDot,
  z as default
};
